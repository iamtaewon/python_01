library(foreign)
library(readxl)
library(dplyr)
welfare = read.spss('./csv/Koweps_hpc10_2015_beta1.sav',
to.data.frame = T)
welfare = read.spss('./csv/Koweps_hpc10_2015_beta1.sav',
to.data.frame = T)
library(foreign)
library(readxl)
library(dplyr)
welfare =read.spss(file="./csv/Koweps_hpc10_2015_beta1.sav",
to.data.frame = T)
welfare =read.spss(file="../csv/Koweps_hpc10_2015_beta1.sav",
to.data.frame = T)
welfare_copy$age_level = ifelse(welfare_copy$age<30,"young",ifelse(welfare_copy$age<60,"middle","old"))
# 연령대별 이혼율 출력 시각화
welfare =read.spss(file="./csv/Koweps_hpc10_2015_beta1.sav",
to.data.frame = T)
welfare %>% select(gender,birth,marriage,religion,income,code_job,code_region) -> welfare_copy
welfare_copy$age = 2023 - welfare_copy$birth
welfare %>% select(gender,birth,marriage,religion,income,code_job,code_region) -> welfare_copy
welfare_copy$age = 2023 - welfare_copy$birth
# 연령대별 이혼율 출력 시각화
welfare =read.spss(file="./csv/Koweps_hpc10_2015_beta1.sav",
to.data.frame = T)
# 연령대별 이혼율 출력 시각화
welfare =read.spss(file="../csv/Koweps_hpc10_2015_beta1.sav",
to.data.frame = T)
welfare %>%
select(gender,birth,marriage,religion,income,code_job,code_region) -> welfare_copy
welfare = rename(welfare,
gender = h10_g3,
birth = h10_g4,
marriage = h10_g10,
religion = h10_g11,
income = p1002_8aq1,
code_job = h10_eco9,
code_region = h10_reg7)
welfare %>%
select(gender, birth, marriage, religion,
income, code_job, code_region) -> welfare_copy
welfare_copy$age_level = ifelse(welfare_copy$age<30,"young",
ifelse(welfare_copy$age<60,"middle","old"))
# 나이별 월급의 차이가 존재하는가?
# 결측치 제거
# 파생변수 나이를 생성
# 나이로 그룹화
# income 평균
# 시각화
welfare_copy %>%
filter(!is.na(income)) %>%
mutate(age = 2023 - birth) %>%
group_by(age) %>%
summarise(income_mean = mean(income)) -> age_income
ggplot(data = age_income,
aes(x = age, y = income_mean)) + geom_line()
age_income %>% arrange(desc(income_mean)) %>% head(5)
# 연령대를 추가
# ageg 나이가 30미만이면 'young'
# 30이상 60미만이면 'middle'
# 60이상이면 'old'
# 연령대별 월급의 평균이 어떻게 되는가?
# 시각화 (막대그래프)
welfare_copy %>%
mutate(age = 2023 - birth) %>%
mutate(ageg = ifelse(age < 30, 'young',
ifelse(age < 60, 'middle', 'old'))) %>%
group_by(ageg) %>%
summarise(income_mean = mean(income, na.rm=T)) -> ageg_income
ggplot(data = ageg_income,
aes(x= ageg, y= income_mean)) + geom_col() +
scale_x_discrete(limits = c('young', 'middle', 'old'))
welfare_copy %>%
mutate(age = 2023 - birth) %>%
mutate(ageg = ifelse(age < 30, 'young',
ifelse(age < 60, 'middle', 'old')))  -> welfare_copy
# 연령대별 이혼율 출력 시각화
welfare_copy %>%
group_marriage = ifelse(marriage == 3, 'divorce',
ifelse(marriage == 1, 'marriage'))
View(welfare_copy)
# 연령대별 이혼율 출력 시각화
welfare_copy %>%
ifelse(marriage == 3, 'divorce',
ifelse(marriage == 1, 'marriage'))
# 연령대별 이혼율 출력 시각화
welfare_copy %>%
ifelse(marriage == 3, 'divorce', 'marriage')
# 연령대별 이혼율 출력 시각화
welfare_copy %>%
ifelse(marriage == 3, 'divorce')
source("~/Documents/GitHub/python_01/20230421/데이터관리.R", echo=TRUE)
# 연령대별 이혼율 출력 시각화
welfare_copy %>%
ifelse(marriage == 1, 'marriage', 'divorce')
View(welfare_copy)
# 연령대별 이혼율 출력 시각화
welfare_copy %>%
ifelse(marriage == 3, 'divorce',
ifelse(marriage == 1, 'marriage'))
# 연령대별 이혼율 출력 시각화
ifelse(welfare_copy$marriage == 1, 'marriage',
ifelse(welfare_copy$marriage == 3, 'divorce', NA)) -> welfare_copy$group_marriage
-> welfare_copy$group_marriage
# 연령대별 이혼율 출력 시각화
ifelse(welfare_copy$marriage == 1, 'marriage',
ifelse(welfare_copy$marriage == 3, 'divorce', NA)) -> welfare_copy$group_marriage
welfare_copy %>%
filter(!is.na(group_marriage)) %>%
group_by(ageg, group_marriage) %>%
summarise(count = n()) %>%
welfare_copy %>%
filter(!is.na(group_marriage)) %>%
group_by(ageg, group_marriage) %>%
summarise(count = n()) %>%
mutate(total_count = sum(count))
welfare_copy$age_level = ifelse(welfare_copy$age<30,"young",ifelse(welfare_copy$age<60,"middle","old"))
# 연령대별 이혼율 출력 시각화
ifelse(welfare_copy$marriage == 1, 'marriage',
ifelse(welfare_copy$marriage == 3, 'divorce', NA)) -> welfare_copy$group_marriage
welfare_copy %>%
filter(!is.na(group_marriage)) %>%
group_by(ageg, group_marriage) %>%
summarise(count = n()) %>%
mutate(total_count = sum(count))
welfare_copy %>%
filter(!is.na(group_marriage)) %>%
group_by(ageg, group_marriage) %>%
summarise(count = n()) %>%
mutate(total_count = sum(count)) %>%
mutate(pct = count/total_count*100)
welfare_copy %>%
filter(!is.na(group_marriage)) %>%
group_by(ageg, group_marriage) %>%
summarise(cnt = n()) %>%
mutate(total_count = sum(cnt)) %>%
mutate(pct = cnt/total_count*100)
load("~/Documents/GitHub/python_01/20230421/.RData")
View(welfare_copy)
welfare_copy %>%
filter(!is.na(group_marriage)) %>%
group_by(ageg, group_marriage) %>%
summarise(cnt = n()) %>%
mutate(total_count = sum(cnt)) %>%
mutate(pct = cnt/total_count*100)
